#!/usr/bin/env python

import argparse
import subprocess
from collections import namedtuple

parser = argparse.ArgumentParser(description='ours or theirs')
parser.add_argument("-o", "--ours", nargs="*", help="take ours for any paths given")
parser.add_argument("-t", "--theirs", nargs="*", help="take theirs for any paths given")
parser.add_argument("-u", "--unmatched", action='store_true', help='go ahead and merge for those not matching with ours or theirs that was unspecified as an argument. (only works if only -o or -t are used).')
args = parser.parse_args()

conflicted_paths = subprocess.check_output(['git-ls-conflicted']).decode('utf-8').split('\n')

ours = []
theirs = []

def populate_it(match_list, our_paths, other_paths):
    out_our_paths = []
    out_other_paths = []

    if isinstance(our_paths, list):
        if len(our_paths) == 0 and other_paths is None:
            ours = conflicted_paths
        else:
            for conflicted_path in conflicted_paths:
                for match_path in args.ours:
                    if conflicted_path.startswith(match_path):
                        ours.append(path)
elif isinstance(args.theirs, list):
    if len(args.theirs) == 0 and args.oursis None:
        theirs = conflicted_paths
    else:







