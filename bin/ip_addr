#!/usr/bin/env python

import argparse
import os
import re

parser = argparse.ArgumentParser(description='returns IP address')
parser.add_argument('scope', nargs='?', default='local', help='local|public (default: local)')

args = parser.parse_args()

if args.scope == 'local':
    addr_to_state = []
    state = None
    for line in os.popen('ip addr').readlines():
        title_match = re.search(r"^\d.* state (\w+)", line)
        if title_match:
            state = title_match.group(1)
        else:
            inet_match = re.search(r'inet ([\d\.]+)/', line)
            if inet_match:
                addr_to_state.append([inet_match.group(1), state])

    state_up = lambda addr_state: addr_state[-1] == 'UP'
    list(filter(state_up, addr_to_state))

    up_addresses = [addr for addr, state in addr_to_state if state == 'UP']

    if not len(up_addresses):
        up_addresses.append(addr_to_state[-1][-1])

    for addr in up_addresses: print(addr)
        
elif args.scope == 'public':
    raise NotImplementedError
else:
    parser.error('scope should be local|public (or no argument)')
