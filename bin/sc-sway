#!/usr/bin/env python

# yay -S grimshot tesseract tesseract-data-eng pico-tts sox
# pip install pytesseract

import shlex
import os
import re
import datetime
import subprocess
import argparse
from pathlib import Path


DEFAULT_DIR = Path.home() / "screenshots"


def cleanup_for_tts(text, args):
    return re.sub(r'(?<!\n)\n(?!\n)', ' ', text).replace('- ', '')


parser = argparse.ArgumentParser()
parser.add_argument(
    "type",
    default="screen",
    choices=["screen", "area", "active", "output", "window"],
    help="grab a specific area",
)
parser.add_argument(
    "-o", "--ocr", action="store_true", help="run ocr and copy to clipboard"
)
parser.add_argument(
    "-e", "--espeak", action="store_true", help="run ocr and then espeak it"
)
parser.add_argument(
    "--no-eog", action="store_true", help="do not startup eog with image"
)
args = parser.parse_args()
if args.espeak:
    args.ocr = True

now = datetime.datetime.now(tz=datetime.timezone.utc)
now_stamp = now.isoformat().replace("T", "--").replace(":", "").split(".")[0]

filename = f"{args.type}-{now_stamp}.png"
image_path = DEFAULT_DIR / filename


cmd = ["grimshot", "save", args.type, str(image_path)]

subprocess.run(cmd)

if args.ocr:
    output = subprocess.check_output(["pytesseract", str(image_path)], text=True)
    text = output.strip().strip("'").strip("'")
    quoted = shlex.quote(text)
    print("OCR QUOTED", repr(quoted))
    subprocess.run(f'echo "{quoted}" | clip', shell=True)

    if args.espeak:
        text_for_tts = cleanup_for_tts(text, args)
        quoted = shlex.quote(text_for_tts)
        print("HELLO!", repr(quoted))
        # subprocess.run(f'echo "{quoted}" | pico-tts | play -t raw -r 16k -e signed -b 16 -c 1 - tempo 1.4', shell=True)
        subprocess.run(f'echo "{quoted}" | espeak --stdin', shell=True)

subprocess.run(["eog", str(image_path)])
