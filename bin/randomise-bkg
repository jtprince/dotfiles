#!/usr/bin/env ruby

require 'shellwords'
#File.write("/home/jtprince/randomize_bgk_which_ruby.log", "using ruby: #{RUBY_VERSION} #{RUBY_RELEASE_DATE} #{`which ruby`}")

$VERBOSE = ARGV.delete("-v") ? 3 : nil

session_type = ENV['XDG_SESSION_TYPE'] || 'x11'

def dual_monitors()
  xrandr_output = `xrandr`
  work_setup = !!(xrandr_output["HDMI1 connected"] && xrandr_output["HDMI2 connected"])
  home_basement_setup = !!(xrandr_output["eDP1 connected"] && xrandr_output["HDMI1 connected"])
  work_setup || home_basement_setup
end

$DUAL_MONITORS = dual_monitors


BKG_DIR =
  if session_type == 'wayland'
    ENV['HOME'] + '/backgrounds'
  else
    ENV['HOME'] + '/Dropbox/backgrounds'
  end

BKG_DIR << '/dual' if $DUAL_MONITORS


EXTS =
  if session_type == 'wayland'
    %w(png)
  else
    %w(png jpg)
  end

files_w_ext = Dir[*EXTS.map {|ext| BKG_DIR + "/*.#{ext}" }]
shellsafe_filename = Shellwords.escape(files_w_ext.sample)


cmd =
  if session_type == 'x11'
    if `which feh`.size > 0
      # feh is in official repos, so using it
      prog = 'feh --bg-fill'
      prog << ' --no-xinerama' if $DUAL_MONITORS
      prog
    elsif `which hsetroot`.size > 0
      # putting feh as default since hsetroot seems a little flaky at moment
      # (put into AUR from community)
      "hsetroot -fill #{shellsafe_filename}"
    else
      abort "need feh or hsetroot to work!"
    end
  else
    "swaymsg 'output * bg #{shellsafe_filename} fill'"
  end

puts cmd if $VERBOSE
system cmd
