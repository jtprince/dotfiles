#!/usr/bin/env python

import argparse
import subprocess
import os

path_to_password_files = os.path.join(os.getenv("HOME"), "Dropbox", "env", "doba", "passwords", "mysql")

host_to_fully_qualified = {
    'web00': 'root@Web00.doba.com',
    'jtprince': 'root@jtprince.dev.doba.com',
}

host_to_password_filename = {
    'web00': 'coredb',
    'jtprince': 'jtprince',
}

# hosts that use doba instead of wholemark
WHOLEMARK_TO_DOBA = ['jtprince']

def get_password(host):
    password_file = os.path.join(path_to_password_files, host_to_password_filename[host])
    with open(password_file) as infile: 
        return infile.read().strip()

def get_mysql_connection_string(host):
    mysql_password = get_password(host)
    if host == 'web00':
        return "-h10.10.11.41 -udoba -p'{}'".format(mysql_password)
    elif host == 'jtprince':
        return "-uroot -p'{}'".format(mysql_password)

parser = argparse.ArgumentParser()
parser.add_argument("query", help='the query')
parser.add_argument("--use", default='wholemark', help='database to use')
parser.add_argument("-n", "--nodb", action='store_true')
parser.add_argument("--host", default='web00', help='host (e.g. "jtprince")')
parser.add_argument("-j", "--jtprince", action='store_true', help="use host jtprince")
parser.add_argument("-g", "--vertical", action='store_true', help="mysql output vertical")
args = parser.parse_args()

if args.jtprince:
    args.host = 'jtprince'

password = get_password(args.host)

query = args.query.strip()

if not args.nodb:
    if args.use == 'wholemark' and args.host in WHOLEMARK_TO_DOBA:
        args.use = 'Doba'
    query = "use {}; ".format(args.use) + query

if query[-1] != ';':
    query += ";"

vertical = '--vertical' if args.vertical else ''

query_file = "/tmp/jtprince-mysqlquery.tmp"
with open(query_file, 'w') as outfile:
    outfile.write(query)

full_host = host_to_fully_qualified[args.host]
scp_cmd = ["scp", query_file, full_host + ":" + query_file]
print(" ".join(scp_cmd))
subprocess.call(scp_cmd)

mysql_connection = get_mysql_connection_string(args.host)
cmd = [
    "ssh",
    full_host,
    '"mysql {vertical} {mysql_connection} < {query_file}"'.format(mysql_connection=mysql_connection, query_file=query_file, vertical=vertical),
]
print(" ".join(cmd))

os.system(" ".join(cmd))
