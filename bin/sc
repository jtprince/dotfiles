#!/usr/bin/env ruby

require 'optparse'

viewers = {
  'e' => 'eog',
  'g' => 'geeqie',
  'i' => 'inkscape',
  'm' => 'gimp',
}

opt = {}

def bold(text)
  "\033[1m\033[31m" + text + "\033[0m"
end

opts = OptionParser.new do |op|
  op.banner = "usage: #{File.basename(__FILE__)} [OPTS] filename[.png]"
  op.separator ""
  op.separator "always copies the image onto the clipboard using xclip"
  op.separator ""
  op.on("-d", "--delay <sec>", Float, "delay that many seconds") {|v| opt[:delay] = v }
  op.on("-b", "--box", "draw a box to capture") {|v| opt[:box] = v }
  op.on("-w", "--window", "select a window to capture") {|v| opt[:window] = v }
  op.on("-o", "--open <s>", "#{bold('g')}eeqie|#{bold('e')}og|gi#{bold('m')}p|#{bold('i')}nkscape") {|v| opt[:open] = viewers[v] || v }
end
opts.parse!

if ARGV.size == 0
  puts opts
  exit
end

filename = ARGV.shift
filename += ".png" unless filename =~ /\.png/i


# create the command
cmd = 
  if opt[:box]
    "import '#{filename}'"
  elsif opt[:window]
    windowid = `xwininfo`.match(/Window id\:\s+(\w+)\s+/)[1]
    "import -window #{windowid} '#{filename}'"
  else
    "import -window root '#{filename}'"
  end

"xclip '#{filename}'"

# sleep if necessary
if opt[:delay]
  sleep(opt[:delay]) 
end

system cmd

if opt[:open]
  sleep(0.1)

  system("#{opt[:open]} '#{filename}' &")
end





