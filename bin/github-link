#!/usr/bin/env ruby

require 'pathname'
require 'optparse'

BASE_URL = "https://github.com"
GOOGLE_VIEWER_LINK = "https://docs.google.com/viewer?url="
GITHUB_HTML_PREVIEW_LINK = "https://cdn.rawgit.com"

opts = {
  filetype: "raw",
}
parser = OptionParser.new do |op|
  op.banner = "usage: #{File.basename(__FILE__)} <file>"
  op.separator "output: the github url of the file"
  op.on("-b", "--blob", "use the blob instead of raw") {|v| opts[:filetype] = "blob"}
  op.on("-m", "--main", "use the main branch instead of current version") {|v| opts[:branch] = "main" }
  op.on("--branch", "use specific branch instead of current version") {|v| opts[:branch] = v }
  op.on("--pdf-view", "make a raw pdf viewable") {|v| opts[:view_pdf] = v }
  op.on("--html-view", "make a raw html doc viewable") {|v| opts[:view_html] = v; opts[:filetype] = nil }
  op.on("--base", "return the repo base link") {|v| opts[:repo_base] = v }
end
parser.parse!

if ARGV.size == 0
  puts parser
  exit
end

filepath = ARGV.first

pathname = Pathname.new(File.absolute_path(filepath))
dir =
if pathname.directory?
  pathname
else
  pathname.dirname
end

hash, topdir, url = Dir.chdir(dir) do
  [
    `git rev-parse HEAD`.chomp,
    `git rev-parse --show-toplevel`.chomp,
    `git remote show origin 2>/dev/null`.split("\n").map do |line|
      line[/Push\s+URL: (.*)/, 1]
    end.compact.first
  ]
end

repo_path = Pathname.new(topdir)
relative_path = pathname.relative_path_from(repo_path)

user, repo = url.split(":", 2).last.split(".git").first.split("/")

def assemble_github_url(user, repo, relative_path, version_specifier, filetype, base_url)
  [base_url, user, repo, filetype, version_specifier, relative_path].compact.join("/")
end

final_url =
if opts[:repo_base]
  [BASE_URL, user, repo].join("/")
else
  github_url = assemble_github_url(user, repo, relative_path.to_s, opts[:branch] || hash, opts[:filetype], opts[:view_html] ? GITHUB_HTML_PREVIEW_LINK : BASE_URL)
  viewer =
    if opts[:view_pdf]
      GOOGLE_VIEWER_LINK
    else
      ""
    end
  final_url = viewer + github_url
end

puts final_url
