#!/usr/bin/env python

# use at your own risk

import time
import argparse
from pathlib import Path
import struct

# Rough translation of this:
# echo -n -e "\x0a" | sudo dd of="/sys/kernel/debug/ec/ec0/io" \
#    bs=1 seek=12 count=1 conv=notrunc 2> /dev/null

LIGHT_PATH = Path("/sys/kernel/debug/ec/ec0/io")

byte_substitution = dict(
    on=0x8A,
    off=0x0A,
)

BYTE_IDX = 12


def substitute_byte(old_bytes, value: int, index=BYTE_IDX):
    """Returns a new byte string where the byte at index is subtituted."""
    sub_byte = struct.pack("B", value)
    return b"".join(
        [
            old_bytes[0:index],
            sub_byte,
            old_bytes[index + 1 :],
        ]
    )


parser = argparse.ArgumentParser()
parser.add_argument("action", choices=["on", "off"])
args = parser.parse_args()
old_bytes = LIGHT_PATH.read_bytes()

value_to_sub = byte_substitution[args.action]
new_bytes = substitute_byte(old_bytes, value_to_sub, index=BYTE_IDX)

LIGHT_PATH.write_bytes(new_bytes)

# for idx in range(256):
#     new_byte = new_bytes[idx]
#     old_byte = old_bytes[idx]
#     print(idx, old_byte, "-->", format(old_byte, "#04x"))
#     print(idx, new_byte, "-->", format(new_byte, "#04x"))
