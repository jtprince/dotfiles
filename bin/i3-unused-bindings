#!/usr/bin/env ruby

config = ENV["HOME"] + "/.config/i3/config"

if ARGV.size == 0
  puts "usage: #{File.basename(__FILE__)} unused [config]"
  puts "outputs list of used/unused bindings"
  puts ""
  puts "default config: #{config}"
  exit
end

type = (ARGV[0] == 'used' ? :used : :unused)

config = ARGV[1] || config

config_s = IO.read(config)
config_lines = IO.readlines(config)

search_and_replace = config_s.scan(%r{^set (\$\w+) ([^\s]+)})

bindings = config_lines.select {|line| line =~ /^bindsym/ }
bindings.map! do |line|
  line.chomp!
  line = search_and_replace.inject(line) do |str, pair|
    str.gsub(*pair)
  end
  line[/^bindsym (.*)/,1]
end

(mod_ctrl_shift, leftovers) = bindings.partition {|binding| binding =~ /^Mod4\+Ctrl\+Shift/ }

(mod_shift, leftovers) = leftovers.partition {|binding| binding =~ /^Mod4\+Shift/ }

(mod_alone, leftovers) = leftovers.partition {|binding| binding =~ /^Mod4/ }

def partition(bindings, letters)
  letters.partition do |let|
    bindings.any? do |mod|
      mod.split(' ').first.split('+').last == let
    end
  end
end

cats = {
  'mod+letter' => [mod_alone, 'a'..'z'],
  'mod+shift+letter' => [mod_shift, 'A'..'Z'],
  'mod+ctrl+shift+letter' => [mod_ctrl_shift, 'A'..'Z'],
}

cats.each do |cat, (bindings, letters)|
  puts cat
  (used, unused) = partition(bindings, letters)
  if type == :used
    puts used
  else
    puts unused
  end
end
