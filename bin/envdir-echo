#!/usr/bin/env python3

import argparse
import os
from pathlib import Path

parser = argparse.ArgumentParser()
parser.add_argument("dir", help="the directory with the environment.")
parser.add_argument("-y", "--yaml", action="store_true", help="output as yaml")
parser.add_argument("-n", "-q", "--no-quotes", action="store_true", help="no wrap values in '\"'")
parser.add_argument("-e", "--export", action="store_true", help="prefix with 'export'")
parser.add_argument("-s", "--single-line", action="store_true", help="single line")

args = parser.parse_args()


def incompatible(is_incompatible, msg):
    if is_incompatible:
        parser.error(msg)
        exit(1)


incompatible(args.yaml and args.export, "Can't use '--export' with '--yaml'")
incompatible(
    args.single_line and (args.yaml or args.export),
    "Can't use '--single-line' with '--yaml' or '--export'",
)

os.chdir(args.dir)
envdir = os.getcwd()

onlyfiles = [path for path in os.listdir(envdir) if Path(envdir, path).is_file()]

env_vars = {path: Path(path).read_text().strip() for path in onlyfiles}

OPTIONS = [
    # arg_key, new_key, if_arg, not_arg
    ('yaml', 'separator', ": ", "="),
    ('no_quotes', 'quote_char', "", '"'),
    ('export', 'export_prefix', "export ", ""),
    ('single_line', 'join_char', " ", "\n"),
    ('single_line', 'end_with', '', '\n'),
]

options = {new_key: (if_arg if getattr(args, arg_key, False) else not_arg) for arg_key, new_key, if_arg, not_arg in OPTIONS}

def build_key_val(key, val):
    parts = [
        options['export_prefix'],
        key,
        options['separator'],
        options['quote_char'],
        val,
        options['quote_char'],
    ]
    return "".join(parts)


keyval_pairs = [build_key_val(key, val) for key, val in env_vars.items()]

print(options['join_char'].join(keyval_pairs), end=options['end_with'])
