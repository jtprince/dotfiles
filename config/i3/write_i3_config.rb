#!/usr/bin/env ruby

require 'ostruct'
require 'fileutils'

has_ruby19 = (`ruby -v` =~ /1.9/) rescue nil
has_dropbox = `dropbox status` rescue nil
has_hsetroot = `hsetroot -v` rescue nil

env = OpenStruct.new( {
  has_ruby19: has_ruby19,
  has_dropbox: has_dropbox,
  has_hsetroot: has_hsetroot,

  fBORDER: '77994B',
  fBG: '006600',
  fTXT: 'FFFFFF',

  #set $fiBG 5D80A6
  fiBG: '465C86',
  fiTXT: 'FFFFFF',
  ufBG: '333333',
  ufTXT: 'CFCFCF',

  urgBORDER: 'F00000',
  urgBG: 'F00000',
  urgTXT: '000000',

} )

template = <<-ENDTEMPLATE
############################
# DO NOT EDIT THIS FILE!
# edit #{__FILE__} instead!
############################

#########################
# NOTES
#########################
# delete and re-run i3-config-wizard for redo
# userguide: http://i3wm.org/docs/userguide.html
# ## -> notes for new users

######################################
# STARTUP PROGRAMS & SETTINGS (Early)
######################################

exec gnome-keyring-daemon --start
exec gnome-settings-daemon
exec nm-applet
exec gnome-sound-applet
# this must be after gnome-settings daemon because it will be wiped out
# otherwise (??) (is that true??)
# exec /usr/bin/xmodmap -e "clear Lock" -e "keycode 0x42 = Escape"
# just make sure ruby is installed or you are out of luck on this!
# #{"exec /home/jtprince/Dropbox/env/bin/randomise_background.rb" if env.has_ruby19}
exec gnome-keyring-daemon
#{"exec hsetroot -fill /home/jtprince/Dropbox/backgrounds/bep_smilin.jpg" if env.has_hsetroot}
#{"exec /usr/bin/dropbox start" if env.has_dropbox} 

#########################
# VARIABLES
#########################

## set to Win (then swap Win and Alt in gnome-keyboard)
# alt=Mod1 win=Mod4
set $mod Mod4
## left
set $l Tab
## right
set $r l
## down
set $d j
## up
set $u k
## left (with shift held down)
set $L Tab
## right (with shift held down)
set $R L
## down (with shift held down)
set $D J
## up (with shift held down)
set $U K

#########################
# APPEARANCE
#########################

# font for window titles. ISO 10646 = Unicode
font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1

## set with variables so your bar will use the same colors (way down)

# colors                    border      background  text
client.focused              ##{env.fBORDER}   ##{env.fBG}       ##{env.fTXT}
client.focused_inactive     ##{env.fBORDER}   ##{env.fiBG}      ##{env.fiTXT}
client.unfocused            ##{env.fiBG}      ##{env.ufBG}      ##{env.ufTXT}
client.urgent               ##{env.urgBORDER} ##{env.urgBG}     ##{env.urgTXT}

#########################
# SOUND
#########################

# doing these with gnome keyboard shortcuts at the moment
## parentheses left and right to change volume
#bindsym $mod+parenright exec amixer set Master 5%+
#bindsym $mod+parenleft exec amixer set Master 5%-
## not unmuting for some reason:
#bindsym $mod+m exec amixer set Master toggle

#########################
# DESKTOP MOVEMENT
#########################

bindsym $mod+period workspace next
bindsym $mod+comma workspace prev
bindsym $mod+Shift+period move workspace next
bindsym $mod+Shift+comma move workspace prev

#########################
# DEFAULTS
#########################

## workspace Layout <default|stacking|tabbed>
workspace_layout stacking

## focus follows mouse <yes|no>
focus_follows_mouse no

## border style for new windows <normal|1pixel|none>
new_window normal

## border style for for floating windows <normal|1pixel|none>
new_float 1pixel

## Automatic back-and-forth when switching to the current workspace
workspace_auto_back_and_forth yes

## orientation for new workspaces <horizontal|vertical|auto>
default_orientation vertical

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

#force_focus_wrapping yes

#########################
# Preferred applications
#########################
# some can be set in gnome, but for this config
set $browser /usr/bin/chromium-browser --allow-outdated-plugins
# your system's default terminal
set $terminal /usr/bin/x-terminal-emulator

bindsym $mod+x exec $terminal
bindsym $mod+i exec $browser
bindsym $mod+e exec $browser --new-window http://gmail.com
bindsym $mod+c exec $browser --new-window http://calendar.google.com

#######################
# LIFE AND DEATH
#######################

# kill focused window
bindsym $mod+Shift+C kill

# start dmenu (a program launcher)
bindsym $mod+p exec dmenu_run

# reload the configuration file
bindsym $mod+Shift+R reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3 -- I tend to reload instead)
bindsym $mod+Shift+U restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+Q exit

# shutdown the computer: sudo chmod u+s /sbin/poweroff
bindsym $mod+Ctrl+Shift+P exec poweroff -p

#######################
# FOCUS
#######################

# change focus
bindsym $mod+$l focus left
bindsym $mod+$r focus right
bindsym $mod+$d focus down
bindsym $mod+$u focus up

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+o focus child

#######################
# MOVEMENT
#######################
# move focused window
bindsym $mod+Shift+$L move left
bindsym $mod+Shift+$R move right
bindsym $mod+Shift+$D move down
bindsym $mod+Shift+$U move up

#######################
# WINDOW CONTROL
#######################

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen

# change container layout (stacked, tabbed, default)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+t layout default

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

#######################
# WORKSPACES
#######################

# switch to workspace
bindsym $mod+1 workspace 1:work
bindsym $mod+2 workspace 2:mail
bindsym $mod+3 workspace 3:music
bindsym $mod+4 workspace 4:kelso
bindsym $mod+5 workspace 5:other
bindsym $mod+6 workspace 6:pubcrawler
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

# move focused container to workspace
bindsym $mod+Shift+exclam move workspace 1:work
bindsym $mod+Shift+at move workspace 2:mail
bindsym $mod+Shift+numbersign move workspace 3:music
bindsym $mod+Shift+dollar move workspace 4:kelso
bindsym $mod+Shift+percent move workspace 5:other
bindsym $mod+Shift+asciicircum move workspace 6:pubcrawler
bindsym $mod+Shift+ampersand move workspace 7
bindsym $mod+Shift+asterisk move workspace 8
bindsym $mod+Shift+parenleft move workspace 9
bindsym $mod+Shift+parenright move workspace 10

#######################
# RESIZE
#######################

# resize window (you can also use the mouse for that - (Alt-right-click))
# I only grow windows, never shrink

#bindsym $l resize shrink left 10 px or 10 ppt
bindsym $mod+Ctrl+Shift+$L resize grow   left 10 px or 10 ppt

#bindsym l resize shrink right 10 px or 10 ppt
bindsym $mod+Ctrl+Shift+$R resize grow   right 10 px or 10 ppt

#bindsym j resize shrink down 10 px or 10 ppt
bindsym $mod+Ctrl+Shift+$D resize grow   down 10 px or 10 ppt

#bindsym k resize shrink up 10 px or 10 ppt
bindsym $mod+Ctrl+Shift+$U resize grow   up 10 px or 10 ppt

## this is cool because it shows you how to use modes... unfortunately it is
## too much work and I just use the ones I care about without a 'mode'
## uncomment if you want to try it out

#mode "resize" {
#    # These bindings trigger as soon as you enter the resize mode
#
#    # They resize the border in the direction you pressed, e.g.
#    # when pressing left, the window is resized so that it has
#    # more space on its left
#
#    bindsym $l resize shrink left 10 px or 10 ppt
#    bindsym Shift+$L resize grow   left 10 px or 10 ppt
#
#    bindsym j resize shrink down 10 px or 10 ppt
#    bindsym Shift+J resize grow   down 10 px or 10 ppt
#
#    bindsym k resize shrink up 10 px or 10 ppt
#    bindsym Shift+K resize grow   up 10 px or 10 ppt
#
#    bindsym l resize shrink right 10 px or 10 ppt
#    bindsym Shift+L resize grow   right 10 px or 10 ppt
#
#    # same bindings, but for the arrow keys
#    bindsym Left resize shrink left 10 px or 10 ppt
#    bindsym Shift+Left resize grow   left 10 px or 10 ppt
#
#    bindsym Down resize shrink down 10 px or 10 ppt
#    bindsym Shift+Down resize grow   down 10 px or 10 ppt
#
#    bindsym Up resize shrink up 10 px or 10 ppt
#    bindsym Shift+Up resize grow   up 10 px or 10 ppt
#
#    bindsym Right resize shrink right 10 px or 10 ppt
#    bindsym Shift+Right resize grow   right 10 px or 10 ppt
#
#    # back to normal: Enter or Escape
#    bindsym Return mode "default"
#    bindsym Escape mode "default"
#}
#
#bindsym $mod+r mode "resize"


#######################
# BAR
#######################

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
  mode dock
  position bottom
  # uses /usr/bin/ruby (won't use rbenv or rvm, not sure why!)
  status_command /home/jtprince/Dropbox/env/bin/status.rb
  # note: you need to set the primary output!, something like:
  # xrandr --output 'VGA1' --primary
  # discover the names of your connections
  # xrandr --current
  tray_output primary

  colors {
    background ##{env.fiBG}
    statusline ##{env.ufTXT}
    focused_workspace ##{env.fTXT} ##{env.fBG}
    active_workspace ##{env.fTXT} ##{env.fBG}
    inactive_workspace ##{env.ufTXT} ##{env.ufBG}
    urgent_workspace ##{env.urgTXT} ##{env.urgBG}
  }
}

#######################
# STARTUP
#######################

## (turn this on if you are ready to start scripting things with i3:)

# create a socket for other processes to hook into
#ipc-socket ~/.i3/ipc.sock


######################################
# STARTUP PROGRAMS & SETTINGS (Late)
######################################

# note that you should mount these once with nautilus and remember the
# password, then you never have to type in the password!
# exec /usr/bin/ruby /home/jtprince/Dropbox/env/bin/mount_chem_dirs.rb --startup all
ENDTEMPLATE

path = ENV['HOME'] + "/.config/i3"

FileUtils.mkpath(path)

outfile = path + "/config"
puts "writing: #{outfile}"
File.write(outfile, template)
