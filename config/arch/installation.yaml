########################################
# pacstrap /mnt base linux linux-firmware base-devel python python-ruamel-yaml
# genfstab -U /mnt >> /mnt/etc/fstab
# arch-chroot /mnt
########################################
root:
  # packages must all be installable with pacman
  setup:
    - _commands:
      - "ln -sf /usr/share/zoneinfo/America/Denver /etc/localtime"
      - "hwclock --systohc"
      - "sed -i 's/^#en_US.UTF-8/en_US.UTF-8/' /etc/locale.gen"
      - "locale-gen"
      - "echo -n 'LANG=en_US.UTF-8' > /etc/locale.conf"
      - "sed -i 's/^#ParallelDownloads/ParallelDownloads/' /etc/pacman.conf"
      # script should also do hostname insertions at end of setup
  documentation:
    - man-db
    - man-pages
    - texinfo
  core-firmware:
  ## (e.g., upd72020x-fw for Thinkpad webcam)
    - sof-firmware
  core-networking-and-communication:
    - iwd
    - wpa_supplicant
    - gnome-keyring
    - dhcpcd
    - openssh
    - wget
    - httpie
  core-utils:
    - zsh
    - git
    - sudo
    - unzip
    - p7zip
    # for uefi support in fwupdmgr
    - udisks2
    # for lsusb etc
    - usbutils
    # - npm
  core-editors:
    - vi
    - vim
    - neovim
    - fzf
    - ctags
  core-terminals:
    - xterm
    - alacritty
  core-x11:
    - xorg-server
    - xorg-apps
    - xorg-xinit
  core-sway:
    - sway
    - swaylock
    # - xorg-xwayland
  core-video:
    - mesa
  video:
    intel:
      # WIP
      - xf86-video-intel
      - intel-media-driver
      - vulkan-intel
    nvidia:
      # WIP
      - xf86-video-nouveau
      - _post_commands:
        - systemctl enable nvidia-persistenced
    amd:
      # 2D xorg acceleration
      - xf86-video-amdgpu
      # vulkan
      - amdvlk
      # vidoe acceleration
      - libva-mesa-driver
      - mesa-vdpau
  sudo:
    - _commands:
      # those in wheel group can sudo with password
      - "echo '%wheel ALL=(ALL) ALL' | sudo EDITOR='tee -a' visudo"
  alacritty-bash:
    - _commands:
      - "sed -i 's/Eterm/Eterm|alacritty/' /etc/bash.bashrc"
  reflector:
    - reflector
    - rsync
    - _post_commands:
      - "reflector --country US --fastest 10 --age 6 --save /etc/pacman.d/mirrorlist"
  add-users:
    - _commands:
      # Change the gid of the users to 1221
      # That's a universal gid I use so that I can copy stuff as my own user to ext4
      # backup disks and I don't have to mess with gid's at that point since all
      # consistent.
      - "groupmod -g 1221 users"
      - "useradd -m -g users -G wheel -s /bin/zsh jtprince"
      - "passwd jtprince"
      - "id jtprince"
  # lightdm:
  # - lightdm
  # - lightdm-gtk-greeter
  # - accountsservice
  # then login to i3, start browser, sign-in your user, and get this file!
  yay:
    - _commands:
      - "git clone https://aur.archlinux.org/yay.git"
      - "cd yay && makepkg -si && cd $HOME"
user-init:
  dropbox:
    - dropbox
    - dropbox-cli
    - _post_commands:
      # roughly
      - dropbox
      - sleep 300
      - "chmod +x ~/Dropbox/env/passwds_logins/INSTALL.sh"
      - "~/Dropbox/env/passwds_logins/INSTALL.sh"
user:
  nvim-related:
    - xclip
    - vim-plug
    - git-delta
    - sheldon-bin
    - _post_commands:
      - "<TODO INSERT THE CURL COMMAND!>"
  language-servers:
    # see https://wiki.archlinux.org/title/Neovim#Tips_and_tricks
    - pyright
    - rust-analyzer
    - gopls
    - yaml-language-server
    # would like to do solargraph, but giving errors:
    # - ruby-solargraph
  dmenu-like:
    - bemenu
    - bemenu-wayland
    - bemenu-dmenu-wayland
  package-managers:
    - paru-bin
  i3:
    - i3-gaps-rounded-git
    - i3lock
  browsers:
    # google-chrome-stable --user-data-dir=$HOME/.config/chrome-personal
    - google-chrome
    # - vieb-bin
  clipboard:
    - xclip
  more-wayland:
    # TODO: need to swap out xclip and wl-clipboard-x11
    # for wl-clipboard, wl-clip, using wl-clipboard-rs (probably)
    # wayland
    - wl-clipboard-x11
    - wl-clipboard
    - wdisplays
    - azote
    # notifications
    - mako
    - grimshot
    - python-i3ipc
    # screen recording
    - wf-recorder
  pipewire:
    - pipewire
    - xdg-desktop-portal
    - xdg-desktop-portal-wlr
  ntp:
    - ntp
    - _post_commands:
      - "sudo systemctl enable ntpd.service"
  network-manager:
    - networkmanager
    - network-manager-applet
    - _post_commands:
      - "sudo systemctl enable NetworkManager"
  aws:
    # /opt/awsvpnclient/AWS\ VPN\ Client
    - awsvpnclient
    - _post_commands:
      - "sudo systemctl enable awsvpnclient"
  keychain:
    - keychain
    - docker-credential-secretservice-bin
  compositing:
    - picom
  python:
    - pyenv
    - pyenv-virtualenv
    - python-pip
    - ipython
    - python-black
    - python-pynvim
    - python-poetry
    # - python-pudb
    # for matplotlib (tk to avoid 'No module name '_tkinter')
    - tk
    # not sure if I really need tcl and python-pmw ??
    - tcl
    # for numpy / scipy
    - gcc-fortran
    - python-pmw
    # - _post_commands:
    #   - "mkdir -p $HOME/virtualenvs"
    #   - "curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py > get-poetry.py"
  jupyter:
    - jupyterlab
    # currently failing to install, might need to pip install
    - jupyterlab_code_formatter
  mime:
    - handlr-bin
  ruby:
    # probably already installed
    - openssl
    # pry likes readline
    - readline
    - zlib
    - ruby
    - rbenv
    - ruby-build
    - _post_commands:
      - "rbenv install --list"
      - "CONFIGURE_OPTS=\"--with-readline-dir=/usr/include/readline\" rbenv install <SOME_VERSION>"
      - "rbenv global <SOME_VERSION>"
      - "gem install pry clipboard solargraph"
  notifications:
    - mako
    - python-mako
  sound:
    - pipewire-pulse
    # maybe?
    # - pulseaudio-alsa
    # sound tray
    - pasystray-git
    - pavucontrol
    - paprefs
    - pavumeter
    - _post_commands:
      - "systemctl --user enable --now pipewire-pulse.service"
      - "# check with: systemctl --user status pipewire-pulse.service"
      - "# and: pactl info"
  bluetooth:
    - bluez
    - bluez-utils
    # - pulseaudio-bluetooth
  monitor:
    - arandr
  files:
    - thunar
    - gvfs
    - gvfs-mtp
    - udisks
    - tree
    # common file system stuff
    - ntfs-3g
    - trash-cli
    # extraction, search, backups
    - dtrx
    - zip
    - ack
    - rdiff-backup
    - ripgrep
    - ack
    - fd
    - meld
    # ranger and deps
    - ranger
    - atool
    - highlight
    - mediainfo
    - odt2txt
    - perl-image-exiftool
    - transmission-cli
    - w3m
    - libcaca
  theme:
    - xcursor-vanilla-dmz
    - gnome-themes-standard
  backup-x-environment:
    # install lxde as a backup X desktop environment
    - sudo pacman -S lxde
  font:
    # core fonts
    - ttf-dejavu
    - ttf-roboto
    - ttf-ubuntu-font-family
    # standard fonts
    - noto-fonts
    - noto-fonts-emoji
    - noto-fonts-cjk
    - ttf-ms-fonts
    - ttf-tahoma
    - ttf-liberation
    - ttf-symbola
    # vim powerline
    - powerline-fonts-git
    # font for status bar
    - ttf-font-icons
    # font for fim (see FBFONT in profile)
    - terminus-font
    # font with great icon support
    - otf-font-awesome
    # misc
    - otf-ipafont
    - culmus
    - cantarell-fonts
    - _post_commands:
      # link my own batch of fonts
      - "ln -s ~/Dropbox/env/appearance/fonts/dot-fonts ~/.local/share/fonts"
      - "fc-cache"
      ## Get good font rendering (looks like infinality)
      - "sudo ln -s /etc/fonts/conf.avail/11-lcdfilter-default.conf /etc/fonts/conf.d"
      - "sudo ln -s /etc/fonts/conf.avail/10-sub-pixel-rgb.conf /etc/fonts/conf.d"
      # ensure that hinting-slight is already linked (should already be set)
      # should output /etc/fonts/conf.avail/10-hinting-slight.conf
      - "ls -alh  /etc/fonts/conf.d/10-hinting-slight.conf"
  laptop:
    - acpi
    - cbatticon
  media:
    # essential media players and control (xava is for fun visualizer)
    - spotify
    - playerctl
    # - xava
  screenshots:
    # for screenshot OCR
    - python-pytesseract
    - tesseract-data-eng
  dotfiles:
    - _commands:
      - "cd $HOME"
      - "git clone git@github.com:jtprince/dotfiles.git"
      - "ln -s ~/dotfiles/bin"
      - "./bin/dotfiles-configure --dry"
      - "./bin/dotfiles-configure"
  check-gpu-xorg-rendering:
    - mesa-demos
    - _post_commands:
      # Should report "direct rendering: Yes"
      - "glxinfo | grep rendering"
  configure-backlight:
    - _commands:
      # See your options for backlight:
      - "ls /sys/class/backlight"
      # the commenting escaping is hard to get right here, so leaving as # comment:
      # sudo sh -c 'echo "export BACKLIGHT=\"<GET THIS RIGHT>\"" > /etc/profile.d/backlight.sh'
  configure-neovim:
    # nvim -> :PlugInstall
  install-python-versions:
    # pyenv install --list
    # # update these to latest patch version for each minor
    # CONFIGURE_OPTS="--enable-shared --enable-loadable-sqlite-extensions --with-system-ffi --with-ensurepip=upgrade --enable-optimizations"
    # pyenv install 3.7.11; pyenv install 3.8.11; pyenv install 3.9.6
    # pyenv global 3.9.6
    # pip install neovim jupytext
    # pip install PyMarkdown PyGithub
  sad:
    - sad
  pkgfile-and-mlocate:
    - mlocate
    - pkgfile
    # for paccache
    - pacman-contrib
    - _post_commands:
      - "sudo updatedb"
      - "sudo pkgfile --update"
  pdf-readers:
    - evince
    - _post_commands:
      # zooming is restricted by page cache size, increase to get zoom into large docs
      - "gsettings set org.gnome.Evince page-cache-size 2014"
  media-software:
    - archey3
    - feh
    - mplayer
    - inkscape
    - gimp
    - eog
    - geeqie
    - gthumb
    - nomacs
    - youtube-dl
    - pandoc-bin
    - mp3splt
    - audacity
  office:
    - slack-wayland
    - zoom
  libre-office:
    - libreoffice
    - libmythes
    - mythes-en

  system-monitoring:
    - gnome-system-monitor
    - gnome-power-manager
    - libstatgrab
    - pystatgrab
  cheat-sheets:
    - cheat-bin
    - _post_commands:
      - "mkdir ~/src && cd ~/src"
      - "git clone git@github.com:cheat/cheatsheets.git"
      - "cd"
  printing:
    - cups cups-pdf
    - system-config-printer
    # - hplip
    # sudo systemctl enable cups.service
    # sudo systemctl start cups.service
    # sudo system-config-printer
  android:
    - jmtpfs
    # mkdir ~/mnt
    # Once you have connected the phone by USB, then
    # select 'Use USB for' -> 'File transfer / Android Auto'
    # to mount phone once you've plugged it into usb:
    # jmtpfs ~/mnt
  cloud-cli:
    - aws-cli
    # - google-cloud-sdk
  docker:
    - docker
    - docker-compose
    - _post_commands:
      - "sudo gpasswd -a jtprince docker"
      - "sudo systemctl enable docker.service"
  secondary-browser:
    - midori
    - firefox
  github:
    #  gh
    - github-cli
  misc:
    # for password generation
    - words
    # torrents
    - deluge-gtk
user-post:
  informant:
    # informant (ensure arch news is read)
    - informant
user-optional:
  wine:
    - wine-staging
    - wine_gecko
    - wine-mono
    # for gaming in wine (necessary fonts already installed)
    - lib32-alsa-lib
    - lib32-alsa-plugins
    - lib32-libpulse
    - lib32-alsa-oss
    - lib32-openal
    - lib32-libxml2
    - lib32-mpg123
    - lib32-lcms2
    - lib32-giflib
    - lib32-libpng
    - lib32-gnutls
    - lib32-virtualgl
    - lib32-libldap
    - _post_commands:
      # --> go to staging tab and click Enable_CSMT for better graphic performance
      - "winecfg"
  texlive-fonts:
    # texlive fonts (needed for pandoc pdf conversion)
    # texlive-latexextra needed for etoolbox.sty, and other md->pdf goodies
    - texlive-core
    - texlive-fontsextra
    - texlive-latexextra
    - _post_commands:
      - "sudo ln -s /etc/fonts/conf.avail/09-texlive-fonts.conf /etc/fonts/conf.d/09-texlive-fonts.conf"
      - "sudo fc-cache && sudo mkfontscale && sudo mkfontdir && sudo rm -f fonts.dir fonts.scale"
  dns-lookup:
    # enable dnsmasq to shorten dns lookup
    - dnsmasq
    - _post_commands:
      - "sudo systemctl enable dnsmasq.service"
      - "sudo systemctl start dnsmasq.service"
      # then change uncomment and add this line to /etc/dnsmasq.conf
      # listen-address=::1,127.0.0.1
  laptop:
    # using tlp for battery optimizations
    # follow instructions here: https://linrunner.de/tlp/installation/arch.html
    # Should be roughly
    - tlp
    - tlp-rdw
    # then run this to know which other packages to install for the system
    # sudo tlp-stat -b
    # e.g., `acpi_call`
    # sudo systemctl enable --now tlp.service
    # sudo systemctl enable --now NetworkManager-dispatcher.service
    # sudo systemctl mask systemd-rfkill.service
    # sudo systemctl mask systemd-rfkill.socket
